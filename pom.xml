<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.home.taxi</groupId>
    <artifactId>taxi-geo-real-time</artifactId>
    <version>1.0-SNAPSHOT</version>


    <properties>
        <!-- Scala language and test suite -->
        <scala.main>2.11</scala.main>
        <scala.version>2.11.12</scala.version>
        <scalatest.version>3.0.1</scalatest.version>

        <!-- Flink Framework -->
        <flink.version>1.4.2</flink.version>

        <!-- Spark Framework -->
        <spark.version>2.2.1</spark.version>

        <!-- HBase and Phoenix interface -->
        <hbase.version>1.1.13</hbase.version>
        <hbase-spark.version>1.1.2.2.6.1.9-1</hbase-spark.version>
        <spark-hbase-connector.version>1.1.1-2.1-s_2.11</spark-hbase-connector.version>

        <!-- Elastic Search -->
        <elasticsearch.version>5.3.2</elasticsearch.version>

        <!-- Kafka -->
        <kafka.version>0.10.0.0</kafka.version>

        <!-- Amazon AWS -->
        <aws-sdk.version>1.11.345</aws-sdk.version>

        <geospark.version>1.1.3</geospark.version>
    </properties>

    <dependencies>

        <!-- Scala language and Test suite -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scalactic</groupId>
            <artifactId>scalactic_${scala.main}</artifactId>
            <version>${scalatest.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.main}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Flink Framework -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-scala_${scala.main}</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-scala_${scala.main}</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!-- Spark Framework -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.main}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Spark SQL -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.main}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.main}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql-kafka-0-10_${scala.main}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <!-- Spark Streaming -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.main}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka-0-10_${scala.main}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <!-- Kafka -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.main}</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>

        <!-- HBase and Phoenix interface -->
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-common</artifactId>
            <version>${hbase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-server</artifactId>
            <version>${hbase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-client</artifactId>
            <version>${hbase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-spark</artifactId>
            <version>${hbase-spark.version}</version>
        </dependency>
        <!-- Version format: vHbase-vSpark-vScala. Supported up to Spark 2.x-->
        <dependency>
            <groupId>com.hortonworks</groupId>
            <artifactId>shc-core</artifactId>
            <version>${spark-hbase-connector.version}</version>
        </dependency>

        <!-- Elastic Search -->
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch-spark-20_${scala.main}</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>
        <!-- use elastic4s lib once we switch to Scala 2.11 -->
        <dependency>
            <groupId>io.searchbox</groupId>
            <artifactId>jest</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>

        <!-- JSON libraries -->
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-json_${scala.main}</artifactId>
            <version>${spray-json.version}</version>
        </dependency>

        <!-- Amazon AWS Java SDK -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>${aws-sdk.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
            <scope>runtime</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/harsha2010/magellan -->
<!--        <dependency>
            <groupId>harsha2010</groupId>
            <artifactId>magellan</artifactId>
            <version>1.0.5-s_2.11</version>
        </dependency>-->

        <dependency>
            <groupId>org.datasyslab</groupId>
            <artifactId>geospark</artifactId>
            <version>${geospark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.datasyslab</groupId>
            <artifactId>geospark-sql_2.3</artifactId>
            <version>${geospark.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.davidmoten</groupId>
            <artifactId>rtree</artifactId>
            <version>0.8-RC10</version>
        </dependency>

    </dependencies>



</project>